/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package ouroboros-consensus-0.1.0.0 */
#ifndef VERSION_ouroboros_consensus
#define VERSION_ouroboros_consensus "0.1.0.0"
#endif /* VERSION_ouroboros_consensus */
#ifndef MIN_VERSION_ouroboros_consensus
#define MIN_VERSION_ouroboros_consensus(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_ouroboros_consensus */
/* package base-4.14.1.0 */
#ifndef VERSION_base
#define VERSION_base "4.14.1.0"
#endif /* VERSION_base */
#ifndef MIN_VERSION_base
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  14 || \
  (major1) == 4 && (major2) == 14 && (minor) <= 1)
#endif /* MIN_VERSION_base */
/* package base-deriving-via-0.1.0.0 */
#ifndef VERSION_base_deriving_via
#define VERSION_base_deriving_via "0.1.0.0"
#endif /* VERSION_base_deriving_via */
#ifndef MIN_VERSION_base_deriving_via
#define MIN_VERSION_base_deriving_via(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_base_deriving_via */
/* package base16-bytestring-1.0.2.0 */
#ifndef VERSION_base16_bytestring
#define VERSION_base16_bytestring "1.0.2.0"
#endif /* VERSION_base16_bytestring */
#ifndef MIN_VERSION_base16_bytestring
#define MIN_VERSION_base16_bytestring(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 2)
#endif /* MIN_VERSION_base16_bytestring */
/* package bimap-0.4.0 */
#ifndef VERSION_bimap
#define VERSION_bimap "0.4.0"
#endif /* VERSION_bimap */
#ifndef MIN_VERSION_bimap
#define MIN_VERSION_bimap(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 0)
#endif /* MIN_VERSION_bimap */
/* package binary-0.8.8.0 */
#ifndef VERSION_binary
#define VERSION_binary "0.8.8.0"
#endif /* VERSION_binary */
#ifndef MIN_VERSION_binary
#define MIN_VERSION_binary(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  8 || \
  (major1) == 0 && (major2) == 8 && (minor) <= 8)
#endif /* MIN_VERSION_binary */
/* package bytestring-0.10.12.0 */
#ifndef VERSION_bytestring
#define VERSION_bytestring "0.10.12.0"
#endif /* VERSION_bytestring */
#ifndef MIN_VERSION_bytestring
#define MIN_VERSION_bytestring(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 12)
#endif /* MIN_VERSION_bytestring */
/* package cardano-binary-1.5.0 */
#ifndef VERSION_cardano_binary
#define VERSION_cardano_binary "1.5.0"
#endif /* VERSION_cardano_binary */
#ifndef MIN_VERSION_cardano_binary
#define MIN_VERSION_cardano_binary(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  5 || \
  (major1) == 1 && (major2) == 5 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_binary */
/* package cardano-crypto-class-2.0.0 */
#ifndef VERSION_cardano_crypto_class
#define VERSION_cardano_crypto_class "2.0.0"
#endif /* VERSION_cardano_crypto_class */
#ifndef MIN_VERSION_cardano_crypto_class
#define MIN_VERSION_cardano_crypto_class(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  0 || \
  (major1) == 2 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_crypto_class */
/* package cardano-prelude-0.1.0.0 */
#ifndef VERSION_cardano_prelude
#define VERSION_cardano_prelude "0.1.0.0"
#endif /* VERSION_cardano_prelude */
#ifndef MIN_VERSION_cardano_prelude
#define MIN_VERSION_cardano_prelude(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_prelude */
/* package cardano-slotting-0.1.0.0 */
#ifndef VERSION_cardano_slotting
#define VERSION_cardano_slotting "0.1.0.0"
#endif /* VERSION_cardano_slotting */
#ifndef MIN_VERSION_cardano_slotting
#define MIN_VERSION_cardano_slotting(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_cardano_slotting */
/* package cborg-0.2.6.0 */
#ifndef VERSION_cborg
#define VERSION_cborg "0.2.6.0"
#endif /* VERSION_cborg */
#ifndef MIN_VERSION_cborg
#define MIN_VERSION_cborg(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 6)
#endif /* MIN_VERSION_cborg */
/* package containers-0.6.2.1 */
#ifndef VERSION_containers
#define VERSION_containers "0.6.2.1"
#endif /* VERSION_containers */
#ifndef MIN_VERSION_containers
#define MIN_VERSION_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  6 || \
  (major1) == 0 && (major2) == 6 && (minor) <= 2)
#endif /* MIN_VERSION_containers */
/* package contra-tracer-0.1.0.0 */
#ifndef VERSION_contra_tracer
#define VERSION_contra_tracer "0.1.0.0"
#endif /* VERSION_contra_tracer */
#ifndef MIN_VERSION_contra_tracer
#define MIN_VERSION_contra_tracer(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_contra_tracer */
/* package deepseq-1.4.4.0 */
#ifndef VERSION_deepseq
#define VERSION_deepseq "1.4.4.0"
#endif /* VERSION_deepseq */
#ifndef MIN_VERSION_deepseq
#define MIN_VERSION_deepseq(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 4)
#endif /* MIN_VERSION_deepseq */
/* package digest-0.0.1.3 */
#ifndef VERSION_digest
#define VERSION_digest "0.0.1.3"
#endif /* VERSION_digest */
#ifndef MIN_VERSION_digest
#define MIN_VERSION_digest(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  0 || \
  (major1) == 0 && (major2) == 0 && (minor) <= 1)
#endif /* MIN_VERSION_digest */
/* package directory-1.3.6.0 */
#ifndef VERSION_directory
#define VERSION_directory "1.3.6.0"
#endif /* VERSION_directory */
#ifndef MIN_VERSION_directory
#define MIN_VERSION_directory(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 6)
#endif /* MIN_VERSION_directory */
/* package filelock-0.1.1.5 */
#ifndef VERSION_filelock
#define VERSION_filelock "0.1.1.5"
#endif /* VERSION_filelock */
#ifndef MIN_VERSION_filelock
#define MIN_VERSION_filelock(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 1)
#endif /* MIN_VERSION_filelock */
/* package filepath-1.4.2.1 */
#ifndef VERSION_filepath
#define VERSION_filepath "1.4.2.1"
#endif /* VERSION_filepath */
#ifndef MIN_VERSION_filepath
#define MIN_VERSION_filepath(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 2)
#endif /* MIN_VERSION_filepath */
/* package hashable-1.3.5.0 */
#ifndef VERSION_hashable
#define VERSION_hashable "1.3.5.0"
#endif /* VERSION_hashable */
#ifndef MIN_VERSION_hashable
#define MIN_VERSION_hashable(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 5)
#endif /* MIN_VERSION_hashable */
/* package io-classes-0.2.0.0 */
#ifndef VERSION_io_classes
#define VERSION_io_classes "0.2.0.0"
#endif /* VERSION_io_classes */
#ifndef MIN_VERSION_io_classes
#define MIN_VERSION_io_classes(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 0)
#endif /* MIN_VERSION_io_classes */
/* package measures-0.1.0.0 */
#ifndef VERSION_measures
#define VERSION_measures "0.1.0.0"
#endif /* VERSION_measures */
#ifndef MIN_VERSION_measures
#define MIN_VERSION_measures(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_measures */
/* package mtl-2.2.2 */
#ifndef VERSION_mtl
#define VERSION_mtl "2.2.2"
#endif /* VERSION_mtl */
#ifndef MIN_VERSION_mtl
#define MIN_VERSION_mtl(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  2 || \
  (major1) == 2 && (major2) == 2 && (minor) <= 2)
#endif /* MIN_VERSION_mtl */
/* package network-mux-0.1.0.0 */
#ifndef VERSION_network_mux
#define VERSION_network_mux "0.1.0.0"
#endif /* VERSION_network_mux */
#ifndef MIN_VERSION_network_mux
#define MIN_VERSION_network_mux(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_network_mux */
/* package nothunks-0.1.3 */
#ifndef VERSION_nothunks
#define VERSION_nothunks "0.1.3"
#endif /* VERSION_nothunks */
#ifndef MIN_VERSION_nothunks
#define MIN_VERSION_nothunks(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 3)
#endif /* MIN_VERSION_nothunks */
/* package ouroboros-network-0.1.0.0 */
#ifndef VERSION_ouroboros_network
#define VERSION_ouroboros_network "0.1.0.0"
#endif /* VERSION_ouroboros_network */
#ifndef MIN_VERSION_ouroboros_network
#define MIN_VERSION_ouroboros_network(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_ouroboros_network */
/* package ouroboros-network-framework-0.1.0.0 */
#ifndef VERSION_ouroboros_network_framework
#define VERSION_ouroboros_network_framework "0.1.0.0"
#endif /* VERSION_ouroboros_network_framework */
#ifndef MIN_VERSION_ouroboros_network_framework
#define MIN_VERSION_ouroboros_network_framework(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_ouroboros_network_framework */
/* package psqueues-0.2.7.3 */
#ifndef VERSION_psqueues
#define VERSION_psqueues "0.2.7.3"
#endif /* VERSION_psqueues */
#ifndef MIN_VERSION_psqueues
#define MIN_VERSION_psqueues(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 7)
#endif /* MIN_VERSION_psqueues */
/* package quiet-0.2 */
#ifndef VERSION_quiet
#define VERSION_quiet "0.2"
#endif /* VERSION_quiet */
#ifndef MIN_VERSION_quiet
#define MIN_VERSION_quiet(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 0)
#endif /* MIN_VERSION_quiet */
/* package random-1.2.1 */
#ifndef VERSION_random
#define VERSION_random "1.2.1"
#endif /* VERSION_random */
#ifndef MIN_VERSION_random
#define MIN_VERSION_random(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 1)
#endif /* MIN_VERSION_random */
/* package semialign-1.1.0.1 */
#ifndef VERSION_semialign
#define VERSION_semialign "1.1.0.1"
#endif /* VERSION_semialign */
#ifndef MIN_VERSION_semialign
#define MIN_VERSION_semialign(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_semialign */
/* package serialise-0.2.4.0 */
#ifndef VERSION_serialise
#define VERSION_serialise "0.2.4.0"
#endif /* VERSION_serialise */
#ifndef MIN_VERSION_serialise
#define MIN_VERSION_serialise(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 4)
#endif /* MIN_VERSION_serialise */
/* package sop-core-0.5.0.2 */
#ifndef VERSION_sop_core
#define VERSION_sop_core "0.5.0.2"
#endif /* VERSION_sop_core */
#ifndef MIN_VERSION_sop_core
#define MIN_VERSION_sop_core(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 0)
#endif /* MIN_VERSION_sop_core */
/* package stm-2.5.0.0 */
#ifndef VERSION_stm
#define VERSION_stm "2.5.0.0"
#endif /* VERSION_stm */
#ifndef MIN_VERSION_stm
#define MIN_VERSION_stm(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  5 || \
  (major1) == 2 && (major2) == 5 && (minor) <= 0)
#endif /* MIN_VERSION_stm */
/* package streaming-0.2.3.1 */
#ifndef VERSION_streaming
#define VERSION_streaming "0.2.3.1"
#endif /* VERSION_streaming */
#ifndef MIN_VERSION_streaming
#define MIN_VERSION_streaming(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 3)
#endif /* MIN_VERSION_streaming */
/* package strict-containers-0.1.0.0 */
#ifndef VERSION_strict_containers
#define VERSION_strict_containers "0.1.0.0"
#endif /* VERSION_strict_containers */
#ifndef MIN_VERSION_strict_containers
#define MIN_VERSION_strict_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_strict_containers */
/* package strict-stm-0.1.0.0 */
#ifndef VERSION_strict_stm
#define VERSION_strict_stm "0.1.0.0"
#endif /* VERSION_strict_stm */
#ifndef MIN_VERSION_strict_stm
#define MIN_VERSION_strict_stm(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_strict_stm */
/* package text-1.2.4.1 */
#ifndef VERSION_text
#define VERSION_text "1.2.4.1"
#endif /* VERSION_text */
#ifndef MIN_VERSION_text
#define MIN_VERSION_text(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 4)
#endif /* MIN_VERSION_text */
/* package these-1.1.1.1 */
#ifndef VERSION_these
#define VERSION_these "1.1.1.1"
#endif /* VERSION_these */
#ifndef MIN_VERSION_these
#define MIN_VERSION_these(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 1)
#endif /* MIN_VERSION_these */
/* package time-1.9.3 */
#ifndef VERSION_time
#define VERSION_time "1.9.3"
#endif /* VERSION_time */
#ifndef MIN_VERSION_time
#define MIN_VERSION_time(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  9 || \
  (major1) == 1 && (major2) == 9 && (minor) <= 3)
#endif /* MIN_VERSION_time */
/* package transformers-0.5.6.2 */
#ifndef VERSION_transformers
#define VERSION_transformers "0.5.6.2"
#endif /* VERSION_transformers */
#ifndef MIN_VERSION_transformers
#define MIN_VERSION_transformers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 6)
#endif /* MIN_VERSION_transformers */
/* package typed-protocols-0.1.0.0 */
#ifndef VERSION_typed_protocols
#define VERSION_typed_protocols "0.1.0.0"
#endif /* VERSION_typed_protocols */
#ifndef MIN_VERSION_typed_protocols
#define MIN_VERSION_typed_protocols(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_typed_protocols */
/* package unix-2.7.2.2 */
#ifndef VERSION_unix
#define VERSION_unix "2.7.2.2"
#endif /* VERSION_unix */
#ifndef MIN_VERSION_unix
#define MIN_VERSION_unix(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  7 || \
  (major1) == 2 && (major2) == 7 && (minor) <= 2)
#endif /* MIN_VERSION_unix */
/* package unix-bytestring-0.3.7.6 */
#ifndef VERSION_unix_bytestring
#define VERSION_unix_bytestring "0.3.7.6"
#endif /* VERSION_unix_bytestring */
#ifndef MIN_VERSION_unix_bytestring
#define MIN_VERSION_unix_bytestring(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 7)
#endif /* MIN_VERSION_unix_bytestring */
/* package vector-0.12.3.1 */
#ifndef VERSION_vector
#define VERSION_vector "0.12.3.1"
#endif /* VERSION_vector */
#ifndef MIN_VERSION_vector
#define MIN_VERSION_vector(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  12 || \
  (major1) == 0 && (major2) == 12 && (minor) <= 3)
#endif /* MIN_VERSION_vector */

/* tool alex-3.2.7.1 */
#ifndef TOOL_VERSION_alex
#define TOOL_VERSION_alex "3.2.7.1"
#endif /* TOOL_VERSION_alex */
#ifndef MIN_TOOL_VERSION_alex
#define MIN_TOOL_VERSION_alex(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  2 || \
  (major1) == 3 && (major2) == 2 && (minor) <= 7)
#endif /* MIN_TOOL_VERSION_alex */
/* tool doctest-0.20.0 */
#ifndef TOOL_VERSION_doctest
#define TOOL_VERSION_doctest "0.20.0"
#endif /* TOOL_VERSION_doctest */
#ifndef MIN_TOOL_VERSION_doctest
#define MIN_TOOL_VERSION_doctest(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  20 || \
  (major1) == 0 && (major2) == 20 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_doctest */
/* tool gcc-10.3.0 */
#ifndef TOOL_VERSION_gcc
#define TOOL_VERSION_gcc "10.3.0"
#endif /* TOOL_VERSION_gcc */
#ifndef MIN_TOOL_VERSION_gcc
#define MIN_TOOL_VERSION_gcc(major1,major2,minor) (\
  (major1) <  10 || \
  (major1) == 10 && (major2) <  3 || \
  (major1) == 10 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_gcc */
/* tool ghc-8.10.4.20210212 */
#ifndef TOOL_VERSION_ghc
#define TOOL_VERSION_ghc "8.10.4.20210212"
#endif /* TOOL_VERSION_ghc */
#ifndef MIN_TOOL_VERSION_ghc
#define MIN_TOOL_VERSION_ghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  10 || \
  (major1) == 8 && (major2) == 10 && (minor) <= 4)
#endif /* MIN_TOOL_VERSION_ghc */
/* tool ghc-pkg-8.10.4.20210212 */
#ifndef TOOL_VERSION_ghc_pkg
#define TOOL_VERSION_ghc_pkg "8.10.4.20210212"
#endif /* TOOL_VERSION_ghc_pkg */
#ifndef MIN_TOOL_VERSION_ghc_pkg
#define MIN_TOOL_VERSION_ghc_pkg(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  10 || \
  (major1) == 8 && (major2) == 10 && (minor) <= 4)
#endif /* MIN_TOOL_VERSION_ghc_pkg */
/* tool haddock-2.24.0 */
#ifndef TOOL_VERSION_haddock
#define TOOL_VERSION_haddock "2.24.0"
#endif /* TOOL_VERSION_haddock */
#ifndef MIN_TOOL_VERSION_haddock
#define MIN_TOOL_VERSION_haddock(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  24 || \
  (major1) == 2 && (major2) == 24 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_haddock */
/* tool happy-1.20.0 */
#ifndef TOOL_VERSION_happy
#define TOOL_VERSION_happy "1.20.0"
#endif /* TOOL_VERSION_happy */
#ifndef MIN_TOOL_VERSION_happy
#define MIN_TOOL_VERSION_happy(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  20 || \
  (major1) == 1 && (major2) == 20 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_happy */
/* tool hpc-0.68 */
#ifndef TOOL_VERSION_hpc
#define TOOL_VERSION_hpc "0.68"
#endif /* TOOL_VERSION_hpc */
#ifndef MIN_TOOL_VERSION_hpc
#define MIN_TOOL_VERSION_hpc(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_hpc */
/* tool hsc2hs-0.68.7 */
#ifndef TOOL_VERSION_hsc2hs
#define TOOL_VERSION_hsc2hs "0.68.7"
#endif /* TOOL_VERSION_hsc2hs */
#ifndef MIN_TOOL_VERSION_hsc2hs
#define MIN_TOOL_VERSION_hsc2hs(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 7)
#endif /* MIN_TOOL_VERSION_hsc2hs */
/* tool pkg-config-0.29.2 */
#ifndef TOOL_VERSION_pkg_config
#define TOOL_VERSION_pkg_config "0.29.2"
#endif /* TOOL_VERSION_pkg_config */
#ifndef MIN_TOOL_VERSION_pkg_config
#define MIN_TOOL_VERSION_pkg_config(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  29 || \
  (major1) == 0 && (major2) == 29 && (minor) <= 2)
#endif /* MIN_TOOL_VERSION_pkg_config */
/* tool runghc-8.10.4.20210212 */
#ifndef TOOL_VERSION_runghc
#define TOOL_VERSION_runghc "8.10.4.20210212"
#endif /* TOOL_VERSION_runghc */
#ifndef MIN_TOOL_VERSION_runghc
#define MIN_TOOL_VERSION_runghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  10 || \
  (major1) == 8 && (major2) == 10 && (minor) <= 4)
#endif /* MIN_TOOL_VERSION_runghc */
/* tool strip-2.35 */
#ifndef TOOL_VERSION_strip
#define TOOL_VERSION_strip "2.35"
#endif /* TOOL_VERSION_strip */
#ifndef MIN_TOOL_VERSION_strip
#define MIN_TOOL_VERSION_strip(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  35 || \
  (major1) == 2 && (major2) == 35 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_strip */

#ifndef CURRENT_PACKAGE_KEY
#define CURRENT_PACKAGE_KEY "ouroboros-consensus-0.1.0.0-d5398589b7debfd6171abae30df4f7d8fae2879c9bb9d0aaf65db2d7568f2c65"
#endif /* CURRENT_packageKey */
#ifndef CURRENT_COMPONENT_ID
#define CURRENT_COMPONENT_ID "ouroboros-consensus-0.1.0.0-d5398589b7debfd6171abae30df4f7d8fae2879c9bb9d0aaf65db2d7568f2c65"
#endif /* CURRENT_COMPONENT_ID */
#ifndef CURRENT_PACKAGE_VERSION
#define CURRENT_PACKAGE_VERSION "0.1.0.0"
#endif /* CURRENT_PACKAGE_VERSION */
